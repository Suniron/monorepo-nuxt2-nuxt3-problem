// @ts-check

/**
 *
 * @param {import("knex").Knex} knex
 * @returns
 */
exports.up = async (knex) => {
  // If already setup, ignore
  if (knex.userParams.isSetup)
    return Promise.resolve()

  await knex.raw(`
  UPDATE vulnerability_asset
  SET exploit_available = FALSE
  WHERE exploit_available is NULL ;
`)
  await knex.raw(`
  UPDATE vulnerability_asset
  SET exploit_framework_core = False
  WHERE exploit_framework_core is NULL ;
`)
  await knex.raw(`
  UPDATE vulnerability_asset
  SET exploited_by_malware = FALSE
  WHERE exploited_by_malware is NULL ;
`)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET status = 'open'
    WHERE status is NULL ;
  `)
}
/**
 *
 * @param {import("knex").Knex} _knex
 * @returns
 */
exports.down = (_knex) => {
  // No rollback
  return Promise.resolve()
}
