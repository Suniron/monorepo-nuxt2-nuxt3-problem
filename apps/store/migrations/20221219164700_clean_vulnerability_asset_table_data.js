// @ts-check

/**
 *
 * @param {import("knex").Knex} knex
 * @returns
 */
exports.up = async (knex) => {
  // If already setup, ignore
  if (knex.userParams.isSetup)
    return Promise.resolve()

  // Replace all "" by NULL for severity, confidence, likelihood, details, exploit_code_maturity, exploitability_ease, patch_publication_date, plugin_modification_date, vuln_publication_date
  await knex.raw(`
    UPDATE vulnerability_asset
    SET severity = ''
    WHERE severity IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET confidence = ''
    WHERE confidence IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET likelihood = ''
    WHERE likelihood IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET details = ''
    WHERE details IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET exploit_code_maturity = ''
    WHERE exploit_code_maturity IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET exploitability_ease = ''
    WHERE exploitability_ease IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET patch_publication_date = ''
    WHERE patch_publication_date IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET plugin_modification_date = ''
    WHERE plugin_modification_date IS NULL ;
  `)
  await knex.raw(`
    UPDATE vulnerability_asset
    SET vuln_publication_date = ''
    WHERE vuln_publication_date IS NULL ;
  `)
}
